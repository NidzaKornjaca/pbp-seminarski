-- MySQL Script generated by MySQL Workbench
-- среда, 14. децембар 2016. 15:02:55 CET
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema poslovni_oglasi
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema poslovni_oglasi
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `poslovni_oglasi` DEFAULT CHARACTER SET utf8 ;
USE `poslovni_oglasi` ;

-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`Grad`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`Grad` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`Grad` (
  `idGrada` INT NOT NULL AUTO_INCREMENT,
  `naziv` VARCHAR(45) NOT NULL,
  `drzava` VARCHAR(45) NOT NULL,
  `postanskiKod` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idGrada`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`Korisnik`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`Korisnik` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`Korisnik` (
  `idKorisnik` INT NOT NULL AUTO_INCREMENT,
  `korisnickoIme` VARCHAR(45) NOT NULL,
  `lozinka` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`idKorisnik`),
  UNIQUE INDEX `korisnickoIme_UNIQUE` (`korisnickoIme` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`Poslodavac`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`Poslodavac` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`Poslodavac` (
  `Korisnik_idKorisnik` INT NOT NULL,
  `naziv` VARCHAR(45) NOT NULL,
  `telefon` VARCHAR(45) NOT NULL,
  `Grad_idGrada` INT NOT NULL,
  `ulica` VARCHAR(45) NOT NULL,
  `broj` VARCHAR(5) NOT NULL,
  `vebsajt` VARCHAR(45) NULL,
  `opis` VARCHAR(500) NULL,
  `kredit` FLOAT NOT NULL DEFAULT 0,
  PRIMARY KEY (`Korisnik_idKorisnik`),
  INDEX `fk_Poslodavac_Grad1_idx` (`Grad_idGrada` ASC),
  CONSTRAINT `fk_Poslodavac_Korisnik1`
    FOREIGN KEY (`Korisnik_idKorisnik`)
    REFERENCES `poslovni_oglasi`.`Korisnik` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Poslodavac_Grad1`
    FOREIGN KEY (`Grad_idGrada`)
    REFERENCES `poslovni_oglasi`.`Grad` (`idGrada`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`Oglas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`Oglas` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`Oglas` (
  `idOglas` INT NOT NULL AUTO_INCREMENT,
  `pozicija` VARCHAR(45) NOT NULL,
  `opisPozicije` VARCHAR(1000) NOT NULL,
  `datumPostavljanja` DATE NOT NULL,
  `datumIsteka` DATE NOT NULL,
  `Grad_idGrada` INT NOT NULL,
  `Poslodavac_Korisnik_idKorisnik` INT NOT NULL,
  PRIMARY KEY (`idOglas`),
  INDEX `fk_Oglas_Grad1_idx` (`Grad_idGrada` ASC),
  INDEX `fk_Oglas_Poslodavac1_idx` (`Poslodavac_Korisnik_idKorisnik` ASC),
  CONSTRAINT `fk_Oglas_Grad1`
    FOREIGN KEY (`Grad_idGrada`)
    REFERENCES `poslovni_oglasi`.`Grad` (`idGrada`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Oglas_Poslodavac1`
    FOREIGN KEY (`Poslodavac_Korisnik_idKorisnik`)
    REFERENCES `poslovni_oglasi`.`Poslodavac` (`Korisnik_idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`Tragac`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`Tragac` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`Tragac` (
  `Korisnik_idKorisnik` INT NOT NULL,
  `ime` VARCHAR(45) NULL,
  `prezime` VARCHAR(45) NULL,
  `slika` VARCHAR(100) NULL DEFAULT 'default_user_image',
  `CV` VARCHAR(100) NULL,
  `opis` VARCHAR(300) NULL,
  PRIMARY KEY (`Korisnik_idKorisnik`),
  CONSTRAINT `fk_Tragac_Korisnik`
    FOREIGN KEY (`Korisnik_idKorisnik`)
    REFERENCES `poslovni_oglasi`.`Korisnik` (`idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`CenovnikUsluga`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`CenovnikUsluga` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`CenovnikUsluga` (
  `sifraUsluge` VARCHAR(10) NOT NULL,
  `naziv` VARCHAR(45) NOT NULL,
  `cena` FLOAT NOT NULL,
  `opis` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`sifraUsluge`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`KupljeneUsluge`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`KupljeneUsluge` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`KupljeneUsluge` (
  `CenovnikUsluga_sifraUsluge` VARCHAR(10) NOT NULL,
  `Poslodavac_Korisnik_idKorisnik` INT NOT NULL,
  `kolicina` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`CenovnikUsluga_sifraUsluge`, `Poslodavac_Korisnik_idKorisnik`),
  INDEX `fk_KupljeneUsluge_Poslodavac1_idx` (`Poslodavac_Korisnik_idKorisnik` ASC),
  CONSTRAINT `fk_KupljeneUsluge_CenovnikUsluga1`
    FOREIGN KEY (`CenovnikUsluga_sifraUsluge`)
    REFERENCES `poslovni_oglasi`.`CenovnikUsluga` (`sifraUsluge`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_KupljeneUsluge_Poslodavac1`
    FOREIGN KEY (`Poslodavac_Korisnik_idKorisnik`)
    REFERENCES `poslovni_oglasi`.`Poslodavac` (`Korisnik_idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`PrioritetniOglasi`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`PrioritetniOglasi` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`PrioritetniOglasi` (
  `Oglas_idOglas` INT NOT NULL,
  `datumZavrsetka` DATE NOT NULL,
  `KupljeneUsluge_CenovnikUsluga_sifraUsluge` VARCHAR(10) NOT NULL,
  `KupljeneUsluge_Poslodavac_Korisnik_idKorisnik` INT NOT NULL,
  PRIMARY KEY (`Oglas_idOglas`, `KupljeneUsluge_CenovnikUsluga_sifraUsluge`, `KupljeneUsluge_Poslodavac_Korisnik_idKorisnik`),
  INDEX `fk_PrioritetniOglasi_KupljeneUsluge1_idx` (`KupljeneUsluge_CenovnikUsluga_sifraUsluge` ASC, `KupljeneUsluge_Poslodavac_Korisnik_idKorisnik` ASC),
  CONSTRAINT `fk_PrioritetniOglasi_Oglas1`
    FOREIGN KEY (`Oglas_idOglas`)
    REFERENCES `poslovni_oglasi`.`Oglas` (`idOglas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PrioritetniOglasi_KupljeneUsluge1`
    FOREIGN KEY (`KupljeneUsluge_CenovnikUsluga_sifraUsluge` , `KupljeneUsluge_Poslodavac_Korisnik_idKorisnik`)
    REFERENCES `poslovni_oglasi`.`KupljeneUsluge` (`CenovnikUsluga_sifraUsluge` , `Poslodavac_Korisnik_idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`Prijava`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`Prijava` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`Prijava` (
  `Tragac_Korisnik_idKorisnik` INT NOT NULL,
  `Oglas_idOglas` INT NOT NULL,
  PRIMARY KEY (`Tragac_Korisnik_idKorisnik`, `Oglas_idOglas`),
  INDEX `fk_Prijava_Oglas1_idx` (`Oglas_idOglas` ASC),
  CONSTRAINT `fk_Prijava_Tragac1`
    FOREIGN KEY (`Tragac_Korisnik_idKorisnik`)
    REFERENCES `poslovni_oglasi`.`Tragac` (`Korisnik_idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Prijava_Oglas1`
    FOREIGN KEY (`Oglas_idOglas`)
    REFERENCES `poslovni_oglasi`.`Oglas` (`idOglas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `poslovni_oglasi`.`Prati`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `poslovni_oglasi`.`Prati` ;

CREATE TABLE IF NOT EXISTS `poslovni_oglasi`.`Prati` (
  `Tragac_Korisnik_idKorisnik` INT NOT NULL,
  `Poslodavac_Korisnik_idKorisnik` INT NOT NULL,
  PRIMARY KEY (`Tragac_Korisnik_idKorisnik`, `Poslodavac_Korisnik_idKorisnik`),
  INDEX `fk_Prati_Poslodavac1_idx` (`Poslodavac_Korisnik_idKorisnik` ASC),
  CONSTRAINT `fk_Prati_Tragac1`
    FOREIGN KEY (`Tragac_Korisnik_idKorisnik`)
    REFERENCES `poslovni_oglasi`.`Tragac` (`Korisnik_idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Prati_Poslodavac1`
    FOREIGN KEY (`Poslodavac_Korisnik_idKorisnik`)
    REFERENCES `poslovni_oglasi`.`Poslodavac` (`Korisnik_idKorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `poslovni_oglasi`;

DELIMITER $$

USE `poslovni_oglasi`$$
DROP TRIGGER IF EXISTS `poslovni_oglasi`.`Oglas_BEFORE_INSERT` $$
USE `poslovni_oglasi`$$
CREATE DEFINER = CURRENT_USER TRIGGER `poslovni_oglasi`.`Oglas_BEFORE_INSERT` BEFORE INSERT ON `Oglas` FOR EACH ROW
BEGIN
set @dani = (select kolicina from KupljeneUsluge where Poslodavac_Korisnik_idKorisnik = new.Poslodavac_Korisnik_idKorisnik
	and CenovnikUsluga_sifraUsluge = "DANOGLASA"); 
if  (@dani < DATEDIFF(new.datumIsteka, new.datumPostavljanja)) then
    signal sqlstate '45000' set message_text='Nedovoljno uplacenih dana';
else
	update KupljeneUsluge set kolicina= (@dani - DATEDIFF(new.datumIsteka, new.datumPostavljanja))
    where Poslodavac_Korisnik_idKorisnik = new.Poslodavac_Korisnik_idKorisnik
	and CenovnikUsluga_sifraUsluge = "DANOGLASA";
end if;
END$$


USE `poslovni_oglasi`$$
DROP TRIGGER IF EXISTS `poslovni_oglasi`.`KupljeneUsluge_BEFORE_INSERT` $$
USE `poslovni_oglasi`$$
CREATE DEFINER = CURRENT_USER TRIGGER `poslovni_oglasi`.`KupljeneUsluge_BEFORE_INSERT` BEFORE INSERT ON `KupljeneUsluge` FOR EACH ROW
BEGIN
    set @stanje = (select kredit from Poslodavac where Korisnik_idKorisnik = new.Poslodavac_Korisnik_idKorisnik);
	
    if ((select cena from CenovnikUsluga where sifraUsluge = new.CenovnikUsluga_sifraUsluge) * new.kolicina >
	   @stanje) then
		signal sqlstate '45000' set message_text = 'Nedovoljno sredstava na racunu za uslugu';
	else
		update Poslodavac set kredit = (@stanje - 
            (select cena from CenovnikUsluga where sifraUsluge = new.CenovnikUsluga_sifraUsluge) 
            * new.kolicina) where new.Poslodavac_Korisnik_idKorisnik=Poslodavac.Korisnik_idKorisnik;
    end if;
END$$


USE `poslovni_oglasi`$$
DROP TRIGGER IF EXISTS `poslovni_oglasi`.`Prijava_BEFORE_INSERT` $$
USE `poslovni_oglasi`$$
CREATE DEFINER = CURRENT_USER TRIGGER `poslovni_oglasi`.`Prijava_BEFORE_INSERT` BEFORE INSERT ON `Prijava` FOR EACH ROW
BEGIN
	if (select datumIsteka from Oglas where idOglas = NEW.Oglas_idOglas) < CURDATE() then
		signal sqlstate '45000' set message_text = 'Oglas je istekao';
	end if;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
